name: Release Build
on:
  push:
    tags:
    - 'v*'
jobs:
  release-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macos-10.15]
        node-version: [12.x]
        node-arch: ['x64']
        node-registry: ['https://registry.yarnpkg.com']
        app-version: ['1.0.4']
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: lunnlew/setup-node@v1.4.0
      with:
        node-version: ${{ matrix.node-version }}
        node-arch: ${{ matrix.node-arch }}
        registry-url: ${{ matrix.node-registry }}
    - name: Create Release
      if: matrix.os == 'windows-2019'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
    - name: install tool yarn
      run: |
        npm install yarn -g
    - name: yarn install deps
      run: |
        yarn
    - name: electron-build
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        yarn run release
    # - name: Upload Release Asset For Win
    #   if: matrix.os == 'windows-2019'
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{ matrix.os }}
    #     path: ./dist_electron/GoogleDrive助手 Setup ${{ matrix.app-version }}.exe
    # - name: Upload Release Asset For Mac
    #   if: matrix.os == 'macos-10.15'
    #   uses: actions/upload-artifact@v2
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dist_electron/GoogleDrive助手-${{ matrix.app-version }}.dmg
    #     asset_name: GoogleDriveAssistant-Setup-${{ matrix.node-arch }}-${{ matrix.app-version }}.dmg
    #     asset_content_type: application/octet-stream